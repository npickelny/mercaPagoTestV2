<div id="wrapper" class="toggled">
  <!-- Sidebar -->

  <div id="sidebar-wrapper">
    <ul class="sidebar-nav">
      <li class="sidebar-brand">
        <a href="#">
          Increase
        </a>
      </li>
      <li>
        <a href="/">Dashboard</a>
      </li>
      <li>
        <a href="/payment/permit">Permit</a>
      </li>
      <li>
        <a href="/payment/pos_backup">Pos Back Up</a>
      </li>

    </ul>
  </div>
  <!-- Page Content -->
  <div id="page-content-wrapper">

    <div id="Checkout" class="inline">
      <h1>Pos Back-Up</h1>
      <div class="card-row">
        <span class="visa" id="visa"></span>
        <span class="mastercard" id="master"></span>
        <span class="amex" id="amex"></span>
      </div>



      <form action="/payment/paycheckout" method="post" id="pay" name="pay">
        <div class="form-group">
          <label for="PaymentAmount">Total:</label>

          <div class="amount-placeholder">
            <span ><input id="amount" class="form-control" value="100" style="max-width: 50%"/></span>
          </div>

        </div>
        <div class="form-group">
          <label or="cardholderName">Nombre en la Tarjeta</label>
          <input class="form-control" type="text" maxlength="255" id="cardholderName" data-checkout="cardholderName" value="Marty"></input>
        </div>

        <div class="form-group dni-type-group">
          <label for="docType">Document type:</label>
          <input class="form-control" id="docType" data-checkout="docType" value="DNI"/>
        </div>

        <div class="form-group dni-group">
          <label or="docNumber">DNI</label>
          <input class="form-control" type="text" maxlength="255" id="docNumber" data-checkout="docNumber" value="12345678"></input>
        </div>

        <div class="form-group">
          <label for="cardNumber">Card number</label>
          <input class="null card-image form-control" id="cardNumber" type="text" data-checkout="cardNumber" value="4509 9535 6623 3704"></input>
        </div>


        <div class="expiry-date-group form-group">
          <label for="cardExpirationMonth">Mes de Expiracion</label>
          <input class="form-control" type="text" placeholder="MM" maxlength="2" id="cardExpirationMonth" data-checkout="cardExpirationMonth" value="12"></input>
        </div>

        <div class="expiry-date-group form-group">
          <label for="cardExpirationYear">AÃ±o de Expiracion</label>
          <input class="form-control" type="text" placeholder="AAAA" maxlength="4" id="cardExpirationYear" data-checkout="cardExpirationYear" value="2018"></input>
        </div>


        <div class="expiry-date-group form-group" >
          <label for="issuer">Banco Emisor:</label>
          <select id="issuer" name="issuer" class="custom-select">
            <option selected>Elegir el banco emisor</option>
          </select>
        </div>

        <div class="expiry-date-group form-group">
          <label for="installments">Cuotas:</label>
          <select id="installments" name="installments" class="custom-select">
            <option selected>Elegir cantidad de cuotas</option>
          </select>
        </div>


        <div class="security-code-group form-group">
          <label for="securityCode">Security code</label>

          <div class="input-container">
            <input class="form-control" type="text" id="securityCode" data-checkout="securityCode" value="123"></input>
            <i id="cvc" class="fa fa-question-circle"></i>
          </div>

          <!--<div class="cvc-preview-container two-card hide">-->
          <!--<div class="amex-cvc-preview"></div>-->
          <!--<div class="visa-mc-dis-cvc-preview"></div>-->
          <!--</div>-->
        </div>


        <div class="email-code-group form-group">
          <label for="email">Email</label>
          <div class="input-container">
            <input class="form-control" id="email" name="email" value="martin.salerno@increasecard.com" type="email" placeholder="your email"/>
          </div>

          <!--<div class="input-container">-->
          <!--<input id="ZIPCode" class="form-control" type="text"></input>-->
          <!--<a tabindex="0" role="button" data-toggle="popover" data-trigger="focus" data-placement="left" data-content="Enter the ZIP/Postal code for your credit card billing address."><i class="fa fa-question-circle"></i></a>-->
          <!--</div>-->

        </div>


        <button id="PayButton" class="btn btn-block btn-success submit-button" type="submit">
          <span class="submit-button-lock"></span>
          <span class="align-middle">Pagar</span>
        </button>
      </form>

    </div>
  </div>
</div>

<script type="text/javascript">


    Mercadopago.setPublishableKey("TEST-d963c94b-2df8-46dc-92e4-f51cdd0ea719");


    function addEvent(el, eventName, handler) {
        if (el.addEventListener) {
            el.addEventListener(eventName, handler);
        } else {
            el.attachEvent('on' + eventName, function () {
                handler.call(el);
            });
        }
    };

    function getBin() {
        var cardSelector = document.querySelector("#cardId");
        if (cardSelector && cardSelector[cardSelector.options.selectedIndex].value != "-1") {
            return cardSelector[cardSelector.options.selectedIndex].getAttribute('first_six_digits');
        }
        var ccNumber = document.querySelector('input[data-checkout="cardNumber"]');
        return ccNumber.value.replace(/[ .-]/g, '').slice(0, 6);
    }

    function guessingPaymentMethod(event) {
        var bin = getBin(),
            amount = document.querySelector('#amount').value;
        if (event.type == "keyup") {
            if (bin.length == 6) {
                Mercadopago.getPaymentMethod({
                    "bin": bin
                }, setPaymentMethodInfo);
            }
        } else {
            setTimeout(function () {
                if (bin.length >= 6) {
                    Mercadopago.getPaymentMethod({
                        "bin": bin
                    }, setPaymentMethodInfo);
                }
            }, 100);
        }
    };

    function clearOptions() {
        var bin = getBin();
        if (bin.length == 0) {
            document.querySelector("#issuer").style.display = 'none';
            document.querySelector("#issuer").innerHTML = "";

            var selectorInstallments = document.querySelector("#installments"),
                fragment = document.createDocumentFragment(),
                option = new Option("Elegir...", '-1');

            selectorInstallments.options.length = 0;
            fragment.appendChild(option);
            selectorInstallments.appendChild(fragment);
            selectorInstallments.setAttribute('disabled', 'disabled');
        }
    }

    function setPaymentMethodInfo(status, response) {
        if (status == 200) {

            var aux = [];
            aux.push(document.getElementById("visa"));
            aux.push(document.getElementById("amex"));
            aux.push(document.getElementById("master"));

            for(i = 0; i < aux.length; i++){
                aux[i].style.opacity = 0.2;
            }
            document.getElementById(response[0].id).style.opacity=1;

            // do somethings ex: show logo of the payment method
            var form = document.querySelector('#pay');

            if (document.querySelector("input[name=paymentMethodId]") == null) {
                var paymentMethod = document.createElement('input');
                paymentMethod.setAttribute('name', "paymentMethodId");
                paymentMethod.setAttribute('type', "hidden");
                paymentMethod.setAttribute('value', response[0].id);
                form.appendChild(paymentMethod);
            } else {
                document.querySelector("input[name=paymentMethodId]").value = response[0].id;
            }

            // check if the security code (ex: Tarshop) is required
            var cardConfiguration = response[0].settings,
                bin = getBin(),
                amount = document.querySelector('#amount').value;

            for (var index = 0; index < cardConfiguration.length; index++) {
                if (bin.match(cardConfiguration[index].bin.pattern) != null && cardConfiguration[index].security_code.length == 0) {
                  /*
                   * In this case you do not need the Security code. You can hide the input.
                   */
                } else {
                  /*
                   * In this case you NEED the Security code. You MUST show the input.
                   */
                }
            }

            Mercadopago.getInstallments({
                "bin": bin,
                "amount": amount
            }, setInstallmentInfo);

            // check if the issuer is necessary to pay
            var issuerMandatory = false,
                additionalInfo = response[0].additional_info_needed;

            for (var i = 0; i < additionalInfo.length; i++) {
                if (additionalInfo[i] == "issuer_id") {
                    issuerMandatory = true;
                }
            }
            ;


            Mercadopago.getIssuers(response[0].id, showCardIssuers);
            addEvent(document.querySelector('#issuer'), 'change', setInstallmentsByIssuerId);

//            if (issuerMandatory) {
//                Mercadopago.getIssuers(response[0].id, showCardIssuers);
//                addEvent(document.querySelector('#issuer'), 'change', setInstallmentsByIssuerId);
//            } else {
//                document.querySelector("#issuer").style.display = 'none';
//                document.querySelector("#issuer").options.length = 0;
//            }
        }
    };

    function showCardIssuers(status, issuers) {
        var issuersSelector = document.querySelector("#issuer"),
            fragment = document.createDocumentFragment();

        issuersSelector.options.length = 0;
        var option = new Option("Elegir...", '-1');
        fragment.appendChild(option);

        for (var i = 0; i < issuers.length; i++) {
            if (issuers[i].name != "default") {
                option = new Option(issuers[i].name, issuers[i].id);
            } else {
                option = new Option("Otro", issuers[i].id);
            }
            fragment.appendChild(option);
        }
        issuersSelector.appendChild(fragment);
        issuersSelector.removeAttribute('disabled');
        document.querySelector("#issuer").removeAttribute('style');
    };

    function setInstallmentsByIssuerId(status, response) {
        var issuerId = document.querySelector('#issuer').value,
            amount = document.querySelector('#amount').value;

        if (issuerId === '-1') {
            return;
        }

        Mercadopago.getInstallments({
            "bin": getBin(),
            "amount": amount,
            "issuer_id": issuerId
        }, setInstallmentInfo);
    };

    function setInstallmentInfo(status, response) {
        var selectorInstallments = document.querySelector("#installments"),
            fragment = document.createDocumentFragment();

        selectorInstallments.options.length = 0;

        if (response.length > 0) {
            var option = new Option("Elegir...", '-1'),
                payerCosts = response[0].payer_costs;

            fragment.appendChild(option);
            for (var i = 0; i < payerCosts.length; i++) {
                option = new Option(payerCosts[i].recommended_message || payerCosts[i].installments, payerCosts[i].installments);
                fragment.appendChild(option);
            }
            selectorInstallments.appendChild(fragment);
            selectorInstallments.removeAttribute('disabled');
        }
    };

    function cardsHandler() {
        clearOptions();
        var cardSelector = document.querySelector("#cardId"),
            amount = document.querySelector('#amount').value;

        if (cardSelector && cardSelector[cardSelector.options.selectedIndex].value != "-1") {
            var _bin = cardSelector[cardSelector.options.selectedIndex].getAttribute("first_six_digits");
            Mercadopago.getPaymentMethod({
                "bin": _bin
            }, setPaymentMethodInfo);
        }
    }


    //    addEvent(document.querySelector('input[data-checkout="cardNumber"]'), 'keyup', guessingPaymentMethod);
    //    addEvent(document.querySelector('input[data-checkout="cardNumber"]'), 'change', guessingPaymentMethod);


    doSubmit = false;
    addEvent(document.querySelector('#pay'), 'submit', doPay);
    function doPay(event) {
        event.preventDefault();
        if (!doSubmit) {
            var $form = document.querySelector('#pay');

            Mercadopago.createToken($form, sdkResponseHandler); // The function "sdkResponseHandler" is defined below

            return false;
        }
    };

    function sdkResponseHandler(status, response) {
        if (status != 200 && status != 201) {
            alert("verify filled data");
        } else {

            var form = document.querySelector('#pay');

            var card = document.createElement('input');
            card.setAttribute('name', "token");
            card.setAttribute('type', "hidden");
            card.setAttribute('value', response.id);
            alert("card token id: " + response.id);
            var privateToken = document.createElement('input');

            privateToken.setAttribute('name', "privateToken");
            privateToken.setAttribute('type', "hidden");
            privateToken.setAttribute('value', <%=  %>);

            form.appendChild(card);
            doSubmit = true;
            form.submit();
        }
    };


    addEvent(document.querySelector('input[data-checkout="cardNumber"]'), 'keyup', guessingPaymentMethod);
    addEvent(document.querySelector('input[data-checkout="cardNumber"]'), 'keyup', clearOptions);
    addEvent(document.querySelector('input[data-checkout="cardNumber"]'), 'change', guessingPaymentMethod);
    cardsHandler();


</script>

<script>
    $(function () {
        $('[data-toggle="popover"]').popover();

        $('#cvc').on('click', function(){
            if ( $('.cvc-preview-container').hasClass('hide') ) {
                $('.cvc-preview-container').removeClass('hide');
            } else {
                $('.cvc-preview-container').addClass('hide');
            }
        });

        $('.cvc-preview-container').on('click', function(){
            $(this).addClass('hide');
        });
    });
</script>
